'From Squeak4.3 of 22 December 2011 [latest update: #11860] on 27 February 2013 at 5:22:10 pm'!Object subclass: #PostorderTraversal	instanceVariableNames: 'root st'	classVariableNames: ''	poolDictionaries: ''	category: 'Collections-BinTree'!!PostorderTraversal methodsFor: 'private' stamp: 'RAB 2/23/2013 15:32'!clearStack	"comment stating purpose of message"	st isEmpty ifFalse: [st pop. self clearStack]! !!PostorderTraversal methodsFor: 'private' stamp: 'RAB 2/23/2013 16:45'!doStack: node	"comment stating purpose of message"	node == nil ifFalse: [st push: node. self doStack: (node left). (node left) == nil ifTrue: [self doStack: (node right)].]! !!PostorderTraversal methodsFor: 'iterators' stamp: 'RAB 2/23/2013 16:10'!first	"Initialize and return first node of traversal"	"Clear Stack"	self clearStack.		"Initialize stack from root"	self doStack: root.		"return the next node, in this case it is node number 1"	^self next	! !!PostorderTraversal methodsFor: 'iterators' stamp: 'RAB 2/23/2013 17:01'!next	"return the next node in the traversal"	| node |	st isEmpty ifTrue: [node := nil.] ifFalse: [node := st pop. st isEmpty ifFalse: [node == ((st top) right) ifFalse: [self doStack: ((st top) right)].].].	^node		! !!PostorderTraversal methodsFor: 'initialize-release' stamp: 'RAB 2/23/2013 15:27'!init: theTree	"called by new: to set the root"	root := theTree.	st := Stack new.	^self! !!PostorderTraversal methodsFor: 'tracing' stamp: 'RAB 2/27/2013 17:21'!getStack	"return the stack used internally for tracing purposes"	^st! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PostorderTraversal class	instanceVariableNames: ''!!PostorderTraversal class methodsFor: 'class initialization' stamp: 'RAB 2/23/2013 15:28'!new: theTree	"comment stating purpose of message"	^(self new)	init: theTree	! !