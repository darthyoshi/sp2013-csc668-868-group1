package org.openmrs.module.basicmodule.web.controller;

import java.util.Collection;
import org.openmrs.module.basicmodule.dsscompiler.compiler.DSSRuleService;

/**
 * Provides a means of accessing the DSS1 Rule Service from JavaScript
 * @author woeltjen
 */
public class DWRRuleService {
    /**
     * Run all rules for a given patient, as reported to the specified source. 
     * The source argument should be "dashboard", "summary", or similar
     * @param patientId the patient to run rules for
     * @param source the context in which rules will be displayed
     * @return a collection of alerts generated by these rules
     */
    public static Collection<String> runRules(int patientId, String source) {
        return DSSRuleService.getRuleService().runRules(patientId, source);
    }
    
    /**
     * List all currently defined DSS1 rules.
     * @return a list of all rules
     */
    public static Collection<String> listRules() {
        return DSSRuleService.getRuleService().listRules();
    }
    
    /**
     * Store a new rule or update an existing rule. Source code is provided 
     * as a plain string (as opposed to a file upload)
     * @param ruleName the name under which to store this rule
     * @param sourceCode the DSS1 source code for this rule
     * @return empty string if successful; otherwise, error message
     */
    public static String store(String ruleName, String sourceCode) {
        try {
            DSSRuleService.getRuleService().store(ruleName, sourceCode);
            return "";
        } catch (Exception e) {
            return e.getMessage();
        }
    }
    
    /**
     * Load the source code for an existing rule.
     * @param ruleName the name of the rule to load
     * @return full DSS1 source code for the rule
     */
    public static String load(String ruleName) {
        try {
            return DSSRuleService.getRuleService().load(ruleName);
        } catch (Exception e) {
            return "";
        }
    }
}
